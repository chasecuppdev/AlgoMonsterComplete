Title: "First True in Sorted Boolean Array"
Description: "Find the first occurrence of true in a boolean array divided into false/true sections"
Pattern: "binary-search"
AlgoMonsterReference: "https://algo.monster/problems/binary_search_boundary"
InputFormat: "array"

MySolution:
  ComplexityAnalysis:
    Time: "O(log n)"
    Space: "O(1)"
    Stable: true
    InPlace: true
  
  Implementation: |
    public static int FirstTrue(List<bool> arr)
    {
        // WRITE YOUR BRILLIANT CODE HERE
        int left = 0, right = arr.Count - 1;
        int boundaryIndex = -1;
        
        while (left <= right)
        {
            int midIndex = left + (right - left) / 2;
            
            if (arr[midIndex])
            {
                right = midIndex - 1;
                boundaryIndex = midIndex;
                
            }
            else if (!arr[midIndex])
            {
                left = midIndex + 1;
            }         
        }
        return boundaryIndex;
    }

TestCases:
  - Input: "[false, false, true, true, true]"
    Expected: "2"
    Notes: "Standard case - first true at index 2"
  
  - Input: "[false, false, false, false, false]"
    Expected: "-1"
    Notes: "No true elements - should return -1"
  
  - Input: "[true, true, true, true, true]"
    Expected: "0"
    Notes: "All true elements - first true at index 0"
  
  - Input: "[false, true]"
    Expected: "1"
    Notes: "Two elements - boundary at index 1"
  
  - Input: "[true, false]"
    Expected: "0"
    Notes: "Unsorted case - but algorithm still finds first true"
  
  - Input: "[false]"
    Expected: "-1"
    Notes: "Single false element"
  
  - Input: "[true]"
    Expected: "0"
    Notes: "Single true element"
  
  - Input: "[]"
    Expected: "-1"
    Notes: "Empty array edge case"
  
  - Input: "[false, false, false, true]"
    Expected: "3"
    Notes: "Boundary at end of array"
  
  - Input: "[false, false, false, false, true, true, true, true, true, true]"
    Expected: "4"
    Notes: "Larger array with boundary in middle-right"
  
  - Input: "[false, false, false, false, false, false, false, false, false, true]"
    Expected: "9"
    Notes: "Single true at very end"
  
  - Input: "[false, true, true, true, true, true, true, true, true, true]"
    Expected: "1"
    Notes: "Single false at beginning"