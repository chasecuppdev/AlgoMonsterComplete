Title: "Insertion Sort"
Description: "Sort array by building sorted portion one element at a time"
Pattern: "fundamental-sorting"
AlgoMonsterReference: "https://algo.monster/problems/insertion_sort"

MySolution:
  ComplexityAnalysis:
    Time: "O(n^2)"
    Space: "O(1)"
    Stable: true
    InPlace: true
  
  Implementation: |
    public static int[] Sort(int[] input)
    {
        var array = (int[])input.Clone();
        
        for (int i = 1; i < array.Length; i++)
        {
            int key = array[i];
            int j = i - 1;
            
            while (j >= 0 && array[j] > key)
            {
                array[j + 1] = array[j];
                j--;
            }
            
            array[j + 1] = key;
        }
        
        return array;
    }

TestCases:
  - Input: "[64, 34, 25, 12, 22, 11, 90]"
    Expected: "[11, 12, 22, 25, 34, 64, 90]"
    Notes: "Standard unsorted array"
  
  - Input: "[5, 2, 4, 6, 1, 3]"
    Expected: "[1, 2, 3, 4, 5, 6]"
    Notes: "Small test case"
  
  - Input: "[1]"
    Expected: "[1]"
    Notes: "Single element"
  
  - Input: "[3, 2, 1]"
    Expected: "[1, 2, 3]"
    Notes: "Reverse sorted"