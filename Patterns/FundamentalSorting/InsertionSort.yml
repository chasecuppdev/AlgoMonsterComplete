Title: "Insertion Sort"
Description: "Sort array by building sorted portion one element at a time"
Pattern: "fundamental-sorting"
AlgoMonsterReference: "https://algo.monster/problems/insertion_sort"

MySolution:
  ComplexityAnalysis:
    Time: "O(n²)"
    Space: "O(1)"
    Stable: true
    InPlace: true
  
  Implementation: |
    public static List<int> Sort(int[] input)
    {
        var list = input.ToList();
        
        for (int i = 1; i < list.Count; i++)
        {
            int current = i;
            while (current > 0 && list[current] < list[current - 1])
            {
                (list[current], list[current - 1]) = (list[current - 1], list[current]);
                current--;
            }
        }
        
        return list;
    }

TestCases:
  - Input: "[64, 34, 25, 12, 22, 11, 90]"
    Expected: "[11, 12, 22, 25, 34, 64, 90]"
    Notes: "Standard unsorted array"
  
  - Input: "[5, 2, 4, 6, 1, 3]"
    Expected: "[1, 2, 3, 4, 5, 6]"
    Notes: "Small test case"
  
  - Input: "[1]"
    Expected: "[1]"
    Notes: "Single element"
  
  - Input: "[3, 2, 1]"
    Expected: "[1, 2, 3]"
    Notes: "Reverse sorted"